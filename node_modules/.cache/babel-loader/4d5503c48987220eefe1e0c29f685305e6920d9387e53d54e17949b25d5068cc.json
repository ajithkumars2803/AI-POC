{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='https://testsagemakerapi.com';// Replace with full endpoint if needed\nfunction App(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[loggedIn,setLoggedIn]=useState(false);const[prompt,setPrompt]=useState('');const[response,setResponse]=useState('');const handleLogin=()=>{if(username==='Ajithkumar'&&password==='Ajith@123'){setLoggedIn(true);}else{alert('Invalid credentials');}};const sendPromptToAPI=async()=>{try{const res=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:prompt})});if(!res.ok)throw new Error('API error');const data=await res.json();setResponse(JSON.stringify(data,null,2));}catch(err){setResponse('Error: '+err.message);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!loggedIn?/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-area\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",username]}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"4\",cols:\"50\",placeholder:\"Type your instruction (e.g., I need to create a EC2 server)\",value:prompt,onChange:e=>setPrompt(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:sendPromptToAPI,children:\"Submit Prompt\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"API Response:\"}),/*#__PURE__*/_jsx(\"pre\",{children:response})]})});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","API_URL","App","username","setUsername","password","setPassword","loggedIn","setLoggedIn","prompt","setPrompt","response","setResponse","handleLogin","alert","sendPromptToAPI","res","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","className","children","type","placeholder","value","onChange","e","target","onClick","rows","cols"],"sources":["/home/aximsoft/Downloads/amplify-frontend/amplify-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst API_URL = 'https://testsagemakerapi.com'; // Replace with full endpoint if needed\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n\n  const handleLogin = () => {\n    if (username === 'Ajithkumar' && password === 'Ajith@123') {\n      setLoggedIn(true);\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  const sendPromptToAPI = async () => {\n    try {\n      const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt: prompt }),\n      });\n\n      if (!res.ok) throw new Error('API error');\n\n      const data = await res.json();\n      setResponse(JSON.stringify(data, null, 2));\n    } catch (err) {\n      setResponse('Error: ' + err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!loggedIn ? (\n        <div className=\"login\">\n          <h2>Login</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          /><br />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          /><br />\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div className=\"prompt-area\">\n          <h2>Welcome, {username}</h2>\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            placeholder=\"Type your instruction (e.g., I need to create a EC2 server)\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n          />\n          <br />\n          <button onClick={sendPromptToAPI}>Submit Prompt</button>\n          <h3>API Response:</h3>\n          <pre>{response}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/aximsoft/Downloads/AI-POC/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://r6keoq81bd.execute-api.us-east-1.amazonaws.com/prod/invocations\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n  const [awaitingConfirmation, setAwaitingConfirmation] = useState(false);\n  const [lastPrompt, setLastPrompt] = useState('');\n  const handleLogin = () => {\n    if (username === 'Ajithkumar' && password === 'Ajith@123') {\n      setLoggedIn(true);\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const callAPI = async () => {\n    let promptToSend = prompt.trim();\n\n    // If user types \"yes\" or similar, send \"confirm <lastPrompt>\"\n    if (awaitingConfirmation && ['yes', 'ok', 'okay', 'y'].includes(prompt.toLowerCase())) {\n      promptToSend = `confirm ${lastPrompt}`;\n    }\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: promptToSend\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      setApiResponse(JSON.stringify(data, null, 2));\n\n      // If backend responds with confirmation message, enable next-step logic\n      if (data.confirmation && data.confirmation.toLowerCase().includes('shall i continue')) {\n        setAwaitingConfirmation(true);\n        setLastPrompt(prompt); // remember original request\n      } else {\n        setAwaitingConfirmation(false);\n        setLastPrompt('');\n      }\n      setPrompt('');\n    } catch (error) {\n      console.error('API call failed:', error);\n      setApiResponse(`ðŸš¨ Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: awaitingConfirmation ? 'Type yes to confirm...' : 'Enter your prompt, e.g. \"create ec2 server\"',\n        value: prompt,\n        onChange: e => setPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: callAPI,\n        children: \"Send Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: apiResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5Lmv/dSwZNO/9WDDzNgkBVd2Yi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","App","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","prompt","setPrompt","apiResponse","setApiResponse","awaitingConfirmation","setAwaitingConfirmation","lastPrompt","setLastPrompt","handleLogin","alert","callAPI","promptToSend","trim","includes","toLowerCase","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","status","data","json","confirmation","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","rows","cols","_c","$RefreshReg$"],"sources":["/home/aximsoft/Downloads/AI-POC/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst API_URL = \"https://r6keoq81bd.execute-api.us-east-1.amazonaws.com/prod/invocations\";\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n  const [awaitingConfirmation, setAwaitingConfirmation] = useState(false);\n  const [lastPrompt, setLastPrompt] = useState('');\n\n  const handleLogin = () => {\n    if (username === 'Ajithkumar' && password === 'Ajith@123') {\n      setLoggedIn(true);\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  const callAPI = async () => {\n    let promptToSend = prompt.trim();\n\n    // If user types \"yes\" or similar, send \"confirm <lastPrompt>\"\n    if (\n      awaitingConfirmation &&\n      ['yes', 'ok', 'okay', 'y'].includes(prompt.toLowerCase())\n    ) {\n      promptToSend = `confirm ${lastPrompt}`;\n    }\n\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt: promptToSend }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const data = await response.json();\n      setApiResponse(JSON.stringify(data, null, 2));\n\n      // If backend responds with confirmation message, enable next-step logic\n      if (\n        data.confirmation &&\n        data.confirmation.toLowerCase().includes('shall i continue')\n      ) {\n        setAwaitingConfirmation(true);\n        setLastPrompt(prompt); // remember original request\n      } else {\n        setAwaitingConfirmation(false);\n        setLastPrompt('');\n      }\n\n      setPrompt('');\n    } catch (error) {\n      console.error('API call failed:', error);\n      setApiResponse(`ðŸš¨ Error: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!loggedIn ? (\n        <div className=\"login\">\n          <h2>Login</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          /><br />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          /><br />\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div className=\"dashboard\">\n          <h2>Welcome, {username}</h2>\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            placeholder={awaitingConfirmation ? 'Type yes to confirm...' : 'Enter your prompt, e.g. \"create ec2 server\"'}\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n          /><br />\n          <button onClick={callAPI}>Send Prompt</button>\n          <pre>{apiResponse}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}